# Advanced Arithmetic Test
# Testing all the new arithmetic operators and features

var.i-x = 10\
var.i-y = 5\
var.i-z = 3\

# Basic arithmetic
print/ "Basic arithmetic:\n" \
print/ "x = " \
txt/x\
print/ ", y = " \
txt/y\
print/ ", z = " \
txt/z\
print/ "\n" \

# Compound assignment operators
print/ "Compound assignment operators:\n" \
x += y\
print/ "x += y: x = " \
txt/x\
print/ "\n" \

x -= z\
print/ "x -= z: x = " \
txt/x\
print/ "\n" \

x *= 2\
print/ "x *= 2: x = " \
txt/x\
print/ "\n" \

x /= 3\
print/ "x /= 3: x = " \
txt/x\
print/ "\n" \

x %= 4\
print/ "x %= 4: x = " \
txt/x\
print/ "\n" \

# Increment/decrement
print/ "Increment/decrement:\n" \
x++\
print/ "x++: x = " \
txt/x\
print/ "\n" \

y--\
print/ "y--: y = " \
txt/y\
print/ "\n" \

# Unary operators
print/ "Unary operators:\n" \
var.i-neg_x = -x\
print/ "-x = " \
txt/neg_x\
print/ "\n" \

var.i-not_x = !x\
print/ "!x = " \
txt/not_x\
print/ "\n" \

var.i-bit_not_x = ~x\
print/ "~x = " \
txt/bit_not_x\
print/ "\n" \

# Exponentiation
print/ "Exponentiation:\n" \
var.i-power = x ** z\
print/ "x ** z = " \
txt/power\
print/ "\n" \

# Compound exponentiation
x **= 2\
print/ "x **= 2: x = " \
txt/x\
print/ "\n" \

# Complex expressions
print/ "Complex expressions:\n" \
var.i-result = (x + y) * z - 10\
print/ "(x + y) * z - 10 = " \
txt/result\
print/ "\n" \

var.i-abs_result = !!(result)\
print/ "!!(result) = " \
txt/abs_result\
print/ "\n" \

# Test with different values
print/ "Testing with different values:\n" \
var.i-a = 15\
var.i-b = 7\

a += b\
print/ "a += b: a = " \
txt/a\
print/ "\n" \

a -= 3\
print/ "a -= 3: a = " \
txt/a\
print/ "\n" \

a *= 2\
print/ "a *= 2: a = " \
txt/a\
print/ "\n" \

a /= 4\
print/ "a /= 4: a = " \
txt/a\
print/ "\n" \

a %= 5\
print/ "a %= 5: a = " \
txt/a\
print/ "\n" \

a++\
print/ "a++: a = " \
txt/a\
print/ "\n" \

b--\
print/ "b--: b = " \
txt/b\
print/ "\n" \

var.i-final = a ** b\
print/ "a ** b = " \
txt/final\
print/ "\n" \

print/ "Advanced arithmetic test completed!\n" \ 